1. Framework
    - 뼈대나 근간을 이루는 코드들의 묶음
    - 개발자는 각 개개인의 능력차이가 큰 직종
    - 개발자 구성에 따라 프로젝트 결과도 차이를 낳는다.
    - 이런 상황을 극복하기 위한 결과물이 프레임 워크
    - 프로그램의 기본 흐름이나 구조를 정하고
    모든 팀원이 이 구조에 자신의 코드를 추가하는 방식으로 개발

2. Framework의 장점
    - 개발에 필요한 구조를 이미 코드로 작성해 놓았음
    - 실력이 부족한 개발자라 하더라도 반쯤 완성한 상태에서
    필요한 부분을 조립하는 현태의 개발이 가능
    - 회사입장: 일정한 품질이 보장되는 결과물
    - 개발입장: 자신이 맡은 부분만 개발 -> 개발시간 단축

3. Spring Framework의 특징
    - POJO 기반의 구성
    - 의존성 주입(DI)를 통한 객체간의 관계 구성
    - AOP 지원
    - 편리한 MVC 구조

4. 의존성 주입

    ** 의존
        a >>>>>>>>>>> b
        a가 b객체를 생성

    ** 의존성 주입
        a <><><><> ????? <><><><> b
    a가 b가 필요하다는 신호만 보냄, b객체를 주입한는 것은 외부에서 이루어짐

    의존성 주입을 위해서는 ?????라는 존재가 필요하게 됨.
    Spting Framework에서는 ApplicationContext가 ?????라는 존재
    필요한 객체들을 생성하고 필요한 객체를 주입해주는 역할
    따라서 개발자들은 기존의 프로그래밍과 달리 객체와 객체를 분리해서 생성
    이ㅣ러한 객체들을 엮는 작업의 형태로 개발

    Application Context가 관리하는 객체들을 빈Bean 이라고 부름
    의존 관계를 처리하는 방식으로 XML설정, Annotation 설정, Java 설정 방식을 채택

6. AOP
    - 관점 지향 프로그래밍
    - 좋은 개발 환경에서는 개발자가 비즈니스 로직에만 집중할 수 있게 됨
    - 스프링 프레임워크는 반복적인 코드를 제거해줌으로써
    핵심 비즈니스 로직에만 집중할 수 있는 방법을 제공

    - 보안, 로그, 트랜잭션, 예외처리와 같이 비즈니스 로직은 아니지만
    반드시 필요한 부분을 횡단 관심사
    스프링 프레임워크는 이러한 횡단 관심사를 분리해서 제작하는 것이 가능

7. Maven
    Apache Foundation 꺼
    POM사용
    Maven 프로젝트에서 소프트웨어 업그레이드를 처리

    소프트웨어 버전 및 종속성 유형과 관련된 정보만 POM에 기술하면 됨
    지원: NetBeans, Eclipse, IntelliJ